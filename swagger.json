{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"GetResult_any.any.any_": {
				"properties": {},
				"type": "object"
			},
			"runtime.Types.DefaultSelection_EventsPayload_": {
				"allOf": [
					{
						"$ref": "#/components/schemas/GetResult_any.any.any_"
					},
					{
						"properties": {},
						"type": "object"
					}
				]
			},
			"Events": {
				"$ref": "#/components/schemas/runtime.Types.DefaultSelection_EventsPayload_",
				"description": "Model Events"
			},
			"Pick_Events.Exclude_keyofEvents.id-or-createdAt-or-updatedAt__": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"location": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_Events.id-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_Events.Exclude_keyofEvents.id-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"CreateModel_Events_": {
				"$ref": "#/components/schemas/Omit_Events.id-or-createdAt-or-updatedAt_"
			},
			"ICreateEvent": {
				"$ref": "#/components/schemas/CreateModel_Events_"
			},
			"Partial_ICreateEvent_": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"location": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "event_manager",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/events": {
			"get": {
				"operationId": "GetEvents",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Events"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateEvent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Events"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICreateEvent"
							}
						}
					}
				}
			}
		},
		"/events/{eventId}": {
			"put": {
				"operationId": "UpdateEvent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Events"
								}
							}
						}
					}
				},
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_ICreateEvent_"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}